{"ast":null,"code":"var _jsxFileName = \"/home/dima/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Udemy_React Hooks/react-medium-clone/React-medium-clone/src/node_modules/pages/authentication/index.js\",\n    _s = $RefreshSig$();\n\n// import axios from 'axios'\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useFetch from 'hooks/useFetch';\nimport { useLocation, useMatch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authentication = props => {\n  _s();\n\n  const isLogin = useLocation().pathname === '/login';\n  const pageTitle = isLogin ? 'Sign in' : 'Sign Up';\n  const descriptionLink = isLogin ? '/register' : '/login';\n  const descriptionText = isLogin ? 'Need an account?' : 'Have an account?';\n  const apiUrl = isLogin ? '/users/login' : '/users';\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userName, serUserName] = useState('');\n  const [{\n    response,\n    isLoading,\n    error\n  }, doFetch] = useFetch(apiUrl);\n  const location = useLocation();\n  console.log(isLogin);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('data', email, password);\n    doFetch({\n      method: 'post',\n      data: {\n        user: {\n          email: 'qq@qq.com',\n          password: '123'\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 offset-md-3 col-xs-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xs-center\",\n            children: pageTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs-center\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: descriptionLink,\n              children: descriptionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              children: [!isLogin && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-lg btn-primary pull-xs-right\",\n                type: \"submit\",\n                disabled: isLoading,\n                children: pageTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Authentication, \"Uv06WPIPbw+lmtT2rCGWvYnxwyk=\", false, function () {\n  return [useLocation, useFetch, useLocation];\n});\n\n_c = Authentication;\nexport default Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/home/dima/Рабочий стол/Udemy_React Hooks/react-medium-clone/React-medium-clone/src/node_modules/pages/authentication/index.js"],"names":["React","useState","useEffect","Link","useFetch","useLocation","useMatch","Authentication","props","isLogin","pathname","pageTitle","descriptionLink","descriptionText","apiUrl","email","setEmail","password","setPassword","userName","serUserName","response","isLoading","error","doFetch","location","console","log","handleSubmit","event","preventDefault","method","data","user","e","target","value"],"mappings":"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","sourcesContent":["// import axios from 'axios'\nimport React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport useFetch from 'hooks/useFetch'\nimport { useLocation, useMatch } from 'react-router-dom';\n\nconst Authentication = props => {\n    const isLogin = useLocation().pathname === '/login'\n\n    const pageTitle = isLogin ? 'Sign in' : 'Sign Up'\n    const descriptionLink = isLogin ? '/register' : '/login'\n    const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'\n    const apiUrl = isLogin ? '/users/login' : '/users'\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [userName, serUserName] = useState('')\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n    \n    const location = useLocation()\n\n    console.log(isLogin)\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log('data', email, password)\n        doFetch({\n            method: 'post',\n            data: {\n                user: {\n                    email: 'qq@qq.com',\n                    password: '123'\n                }\n            }\n        })\n    }\n\n    \n    return (\n        <div className=\"auth-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3 col-xs-12\">\n                        <h1 className=\"text-xs-center\">{pageTitle}</h1>\n                        <p className=\"text-xs-center\">\n                            <Link to={descriptionLink}>{descriptionText}</Link>\n                        </p>\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                {!isLogin && (\n                                    <fieldset className=\"form-group\">\n                                    <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Email\" \n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    />\n                                    </fieldset>\n                                )}\n                                <fieldset className=\"form-group\">\n                                    <input \n                                    type=\"email\" \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Email\" \n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    />\n                                </fieldset>\n\n                                <fieldset className=\"form-group\">\n                                    <input \n                                    type=\"password\" \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                    />\n                                </fieldset>\n                                <button \n                                className=\"btn btn-lg btn-primary pull-xs-right\" \n                                type=\"submit\"\n                                disabled={isLoading}\n                                >\n                                {pageTitle}\n                                </button>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Authentication"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dima/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Udemy_React Hooks/react-medium-clone/React-medium-clone/src/node_modules/pages/authentication/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useFetch from 'hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authentication = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [{\n    response,\n    isLoading,\n    error\n  }, doFetch] = useFetch('someurl');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('data', email, password);\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (!isSubmitting) {\n      return;\n    }\n\n    axios('https://conduit.productionready.io/api/users/login', {\n      method: 'post',\n      data: {\n        user: {\n          email: 'qq@qq.com',\n          password: '123'\n        }\n      }\n    }).then(result => {\n      console.log('success ', result);\n      setIsSubmitting(false);\n    }).catch(error => {\n      console.log('error ', error);\n      setIsSubmitting(false);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 offset-md-3 col-xs-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xs-center\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs-center\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"register\",\n              children: \"Need an account?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control form-control-lg\",\n                  placeholder: \"Password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-lg btn-primary pull-xs-right\",\n                type: \"submit\",\n                disabled: isSubmitting,\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Authentication, \"wCG1oe6pPFMw7DgONT99nfz2izU=\", false, function () {\n  return [useFetch];\n});\n\n_c = Authentication;\nexport default Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/home/dima/Рабочий стол/Udemy_React Hooks/react-medium-clone/React-medium-clone/src/node_modules/pages/authentication/index.js"],"names":["axios","React","useState","useEffect","Link","useFetch","Authentication","email","setEmail","password","setPassword","isSubmitting","setIsSubmitting","response","isLoading","error","doFetch","handleSubmit","event","preventDefault","console","log","method","data","user","then","result","catch","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport useFetch from 'hooks/useFetch'\n\nconst Authentication = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [isSubmitting, setIsSubmitting] = useState(false)\n    const [{response, isLoading, error}, doFetch] = useFetch('someurl')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log('data', email, password)\n        setIsSubmitting(true)\n    }\n\n    useEffect(() => {\n        if (!isSubmitting) {\n            return  \n        }\n        axios('https://conduit.productionready.io/api/users/login', {\n            method: 'post',\n            data: {\n                user: {\n                    email: 'qq@qq.com',\n                    password: '123'\n                }\n            }\n        }).then(result => {\n            console.log('success ', result)\n            setIsSubmitting(false)\n        }).catch(error => {\n            console.log('error ', error)\n            setIsSubmitting(false)  \n        })\n    })\n    return (\n        <div className=\"auth-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3 col-xs-12\">\n                        <h1 className=\"text-xs-center\">Login</h1>\n                        <p className=\"text-xs-center\">\n                            <Link to=\"register\">Need an account?</Link>\n                        </p>\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input \n                                    type=\"email\" \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Email\" \n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    />\n                                </fieldset>\n\n                                <fieldset className=\"form-group\">\n                                    <input \n                                    type=\"password\" \n                                    className=\"form-control form-control-lg\" \n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                    />\n                                </fieldset>\n                                <button \n                                className=\"btn btn-lg btn-primary pull-xs-right\" \n                                type=\"submit\"\n                                disabled={isSubmitting}\n                                >\n                                Sign in\n                                </button>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Authentication"]},"metadata":{},"sourceType":"module"}